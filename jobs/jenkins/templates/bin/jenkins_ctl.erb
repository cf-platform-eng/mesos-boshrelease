#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status

# Setup common env vars and folders
source /var/vcap/packages/bosh-helpers/ctl_setup.sh 'jenkins'
export JENKINS_PID_FILE=${JENKINS_PID_DIR}/jenkins.pid

<%
def openstruct_to_hash(os)
  os.marshal_dump.map do |key, element|
    element.is_a?(OpenStruct) ? { key => openstruct_to_hash(element) } : { key => element }
  end.reduce(&:merge)
end

networks = openstruct_to_hash(spec.networks)
default_network = networks.values.find { |net| net.has_key?(:default) }
private_ip = default_network[:ip]

vip_network = networks.values.find { |net| net[:type] == 'vip' }
public_ip = vip_network.nil? ? private_ip : vip_network[:ip]

if p('jenkins.nginx.ssl_only')
  jenkins_url_protocol = "https"
  jenkins_url_port = p('jenkins.nginx.https.port')
else
  jenkins_url_protocol = "http"
  jenkins_url_port = p('jenkins.nginx.http.port')
end
%>

public_ip=$(public_ip_address)
if [ -z $public_ip ]; then
  public_ip=<%= public_ip %>
fi

case $1 in

  start)
    pid_guard ${JENKINS_PID_FILE} ${JOB_NAME}
    echo $$ > ${JENKINS_PID_FILE}

    # Increase the default number of open file descriptors
    ulimit -n 8192

    # Create Jenkins user & group
    create_group ${JENKINS_GROUP}
    create_user ${JENKINS_USER} ${JENKINS_GROUP}

    # Copy Jenkins configuration file (Don't override if a newer version exists)
    mkdir -p ${JENKINS_HOME}
    cp -u ${JENKINS_CONF_DIR}/config.xml ${JENKINS_HOME}
    chown -R ${JENKINS_USER}:${JENKINS_GROUP} ${JENKINS_CONF_DIR}

    # Copy Jenkins plugins (Don't override if a newer version exists)
    mkdir -p ${JENKINS_PLUGINS_DIR}
    cp -a -u /var/vcap/packages/jenkins/plugins/* ${JENKINS_PLUGINS_DIR}
    chown -R ${JENKINS_USER}:${JENKINS_GROUP} ${JENKINS_PLUGINS_DIR}

    # Process IP
    export LIBPROCESS_IP=<%= private_ip %>

    # Jenkins URL
    export JENKINS_URL="<%= jenkins_url_protocol %>://${public_ip}:<%= jenkins_url_port %>"

    # Start Jenkins service
    exec chpst -u ${JENKINS_USER}:${JENKINS_GROUP} java \
           -Xmx"${JENKINS_JAVA_HEAP_SIZE}" \
           -Xms"${JENKINS_JAVA_HEAP_SIZE}" \
           -Dfile.encoding=UTF-8 \
           -Djava.io.tmpdir=${JENKINS_TMP_DIR} \
           -jar /var/vcap/packages/jenkins/jenkins.war  \
           --debug="${JENKINS_DEBUG_LEVEL}" \
           --httpPort="${JENKINS_PORT}" \
           --httpListenAddress="${JENKINS_LISTEN_ADDRESS}" \
           --httpDoHostnameLookups="${JENKINS_HTTP_DO_HOSTNAME_LOOKUPS}" \
           --httpKeepAliveTimeout="${JENKINS_HTTP_KEEPALIVE_TIMEOUT}" \
           --ajp13Port="${JENKINS_AJP_PORT}" \
           --ajp13ListenAddress="${JENKINS_AJP_LISTEN_ADDRESS}" \
           --handlerCountStartup="${JENKINS_HANDLER_COUNT_STARTUP}" \
           --handlerCountMax="${JENKINS_HANDLER_COUNT_MAX}" \
           --handlerCountMaxIdle="${JENKINS_HANDLER_COUNT_MAX_IDLE}" \
           --maxParamCount="${JENKINS_MAX_PARM_COUNT}" \
           --prefix="${JENKINS_PREFIX}" \
           --argumentsRealm.passwd.${JENKINS_ADMIN_USER}="${JENKINS_ADMIN_PASSWORD}" \
           --argumentsRealm.roles.${JENKINS_ADMIN_USER}=admin \
           >>${JENKINS_LOG_DIR}/${OUTPUT_LABEL}.stdout.log \
           2>>${JENKINS_LOG_DIR}/${OUTPUT_LABEL}.stderr.log
    ;;

  stop)
    # Stop Jenkins service
    kill_and_wait ${JENKINS_PID_FILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
